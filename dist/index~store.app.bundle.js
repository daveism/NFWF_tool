(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["index~store"],{

/***/ "./src/scripts/localStorageAPI.js":
/*!****************************************!*\
  !*** ./src/scripts/localStorageAPI.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Provides common functions used by the local storage API. Used in the Store and URL classes. In\n * the case that we cannot use localStorage or if we want to define multiple store providers for\n * backwards compatibility we will be able to swap out the storage object for one that implements\n * the getItem, setItem & removeItem functions in an equivalent way without changing any of the\n * code in the Store, URL, etc classes.\n */\nvar STATE_KEY = 'state';\n\nvar StorageAPI = exports.StorageAPI = function () {\n  function StorageAPI() {\n    _classCallCheck(this, StorageAPI);\n\n    if (StorageAPI.storageAvailable()) {\n      this.storage = window.localStorage;\n    }\n    // We need this custom event since browsers do not generally dispatch the 'storage' event most\n    // of the time. They only tend to fire it when you have the same tab open in two windows and\n    // one tab changes the localStorage.\n    this.storageEvent = new CustomEvent('storages');\n  }\n\n  _createClass(StorageAPI, [{\n    key: 'dispatchStorageEvent',\n    value: function dispatchStorageEvent() {\n      window.dispatchEvent(this.storageEvent);\n    }\n\n    // Gets an item from the storage provider, primarily used later in the composed functions\n    //\n    // @param key | string\n    // @return string\n\n  }, {\n    key: 'getItem',\n    value: function getItem() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      return this.storage.getItem(key);\n    }\n\n    // Gets the state from the storage provider\n    //\n    // @return string\n\n  }, {\n    key: 'getStateAsString',\n    value: function getStateAsString() {\n      return this.getItem(STATE_KEY);\n    }\n\n    // Gets the state from the storage provider as an object\n    //\n    // @return object\n\n  }, {\n    key: 'getState',\n    value: function getState() {\n      return this.checkStateExists() ? JSON.parse(this.getItem(STATE_KEY)) : {};\n    }\n\n    // Sets a key/value pair to the storage provider, primarily used later in the composed functions\n    //\n    // @param key | string\n    // @param value | string\n\n  }, {\n    key: 'setItem',\n    value: function setItem() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      this.storage.setItem(key, value);\n      this.dispatchStorageEvent();\n    }\n\n    // Sets a new state string state, should be a stringified object\n    //\n    // @param value | string\n\n  }, {\n    key: 'setStateAsString',\n    value: function setStateAsString() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      this.setItem(STATE_KEY, value);\n    }\n\n    // Sets a new state object state\n    //\n    // @param value | string\n\n  }, {\n    key: 'setState',\n    value: function setState() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.setItem(STATE_KEY, JSON.stringify(value));\n    }\n\n    // Removes a key/value pair from the storage provider, primarily used later in the composed\n    // functions\n    //\n    // @param key | string\n\n  }, {\n    key: 'removeItem',\n    value: function removeItem() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      this.storage.removeItem(key);\n      this.dispatchStorageEvent();\n    }\n\n    // Removes the current state from the store\n\n  }, {\n    key: 'removeState',\n    value: function removeState() {\n      this.removeItem(STATE_KEY);\n    }\n\n    // Checks if the state exists in the storage provider\n\n  }, {\n    key: 'checkStateExists',\n    value: function checkStateExists() {\n      return this.getItem(STATE_KEY) ? true : false;\n    }\n  }], [{\n    key: 'listenForStateChange',\n    value: function listenForStateChange(handler) {\n      window.addEventListener('storages', handler);\n    }\n\n    // Check if localStorage available.\n    // Taken from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    //\n    // @return boolean\n\n  }, {\n    key: 'storageAvailable',\n    value: function storageAvailable() {\n      var type = 'localStorage';\n      var storage = void 0;\n      try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n      } catch (e) {\n        return e instanceof DOMException && (\n        // everything except Firefox\n        e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === 'QuotaExceededError' ||\n        // Firefox\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n        // acknowledge QuotaExceededError only if there's something already stored\n        storage.length !== 0;\n      }\n    }\n  }]);\n\n  return StorageAPI;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9sb2NhbFN0b3JhZ2VBUEkuanM/YWJhMiJdLCJuYW1lcyI6WyJTVEFURV9LRVkiLCJTdG9yYWdlQVBJIiwic3RvcmFnZUF2YWlsYWJsZSIsInN0b3JhZ2UiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJzdG9yYWdlRXZlbnQiLCJDdXN0b21FdmVudCIsImRpc3BhdGNoRXZlbnQiLCJrZXkiLCJnZXRJdGVtIiwiY2hlY2tTdGF0ZUV4aXN0cyIsIkpTT04iLCJwYXJzZSIsInZhbHVlIiwic2V0SXRlbSIsImRpc3BhdGNoU3RvcmFnZUV2ZW50Iiwic3RyaW5naWZ5IiwicmVtb3ZlSXRlbSIsImhhbmRsZXIiLCJhZGRFdmVudExpc3RlbmVyIiwidHlwZSIsIngiLCJlIiwiRE9NRXhjZXB0aW9uIiwiY29kZSIsIm5hbWUiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7OztBQU9BLElBQU1BLFlBQVksT0FBbEI7O0lBRWFDLFUsV0FBQUEsVTtBQUNYLHdCQUFjO0FBQUE7O0FBQ1osUUFBSUEsV0FBV0MsZ0JBQVgsRUFBSixFQUFtQztBQUNqQyxXQUFLQyxPQUFMLEdBQWVDLE9BQU9DLFlBQXRCO0FBQ0Q7QUFDRDtBQUNBO0FBQ0E7QUFDQSxTQUFLQyxZQUFMLEdBQW9CLElBQUlDLFdBQUosQ0FBZ0IsVUFBaEIsQ0FBcEI7QUFDRDs7OzsyQ0FFc0I7QUFDckJILGFBQU9JLGFBQVAsQ0FBcUIsS0FBS0YsWUFBMUI7QUFDRDs7QUFFRDtBQUNBO0FBQ0E7QUFDQTs7Ozs4QkFDa0I7QUFBQSxVQUFWRyxHQUFVLHVFQUFKLEVBQUk7O0FBQ2hCLGFBQU8sS0FBS04sT0FBTCxDQUFhTyxPQUFiLENBQXFCRCxHQUFyQixDQUFQO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBOzs7O3VDQUNtQjtBQUNqQixhQUFPLEtBQUtDLE9BQUwsQ0FBYVYsU0FBYixDQUFQO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBOzs7OytCQUNXO0FBQ1QsYUFBTyxLQUFLVyxnQkFBTCxLQUEwQkMsS0FBS0MsS0FBTCxDQUFXLEtBQUtILE9BQUwsQ0FBYVYsU0FBYixDQUFYLENBQTFCLEdBQWdFLEVBQXZFO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7Ozs7OEJBQzhCO0FBQUEsVUFBdEJTLEdBQXNCLHVFQUFoQixFQUFnQjtBQUFBLFVBQVpLLEtBQVksdUVBQUosRUFBSTs7QUFDNUIsV0FBS1gsT0FBTCxDQUFhWSxPQUFiLENBQXFCTixHQUFyQixFQUEwQkssS0FBMUI7QUFDQSxXQUFLRSxvQkFBTDtBQUNEOztBQUVEO0FBQ0E7QUFDQTs7Ozt1Q0FDNkI7QUFBQSxVQUFaRixLQUFZLHVFQUFKLEVBQUk7O0FBQzNCLFdBQUtDLE9BQUwsQ0FBYWYsU0FBYixFQUF3QmMsS0FBeEI7QUFDRDs7QUFFRDtBQUNBO0FBQ0E7Ozs7K0JBQ3FCO0FBQUEsVUFBWkEsS0FBWSx1RUFBSixFQUFJOztBQUNuQixXQUFLQyxPQUFMLENBQWFmLFNBQWIsRUFBd0JZLEtBQUtLLFNBQUwsQ0FBZUgsS0FBZixDQUF4QjtBQUNEOztBQUVEO0FBQ0E7QUFDQTtBQUNBOzs7O2lDQUNxQjtBQUFBLFVBQVZMLEdBQVUsdUVBQUosRUFBSTs7QUFDbkIsV0FBS04sT0FBTCxDQUFhZSxVQUFiLENBQXdCVCxHQUF4QjtBQUNBLFdBQUtPLG9CQUFMO0FBQ0Q7O0FBRUQ7Ozs7a0NBQ2M7QUFDWixXQUFLRSxVQUFMLENBQWdCbEIsU0FBaEI7QUFDRDs7QUFFRDs7Ozt1Q0FDbUI7QUFDakIsYUFBTyxLQUFLVSxPQUFMLENBQWFWLFNBQWIsSUFBMEIsSUFBMUIsR0FBaUMsS0FBeEM7QUFDRDs7O3lDQUUyQm1CLE8sRUFBUztBQUNuQ2YsYUFBT2dCLGdCQUFQLENBQXdCLFVBQXhCLEVBQW9DRCxPQUFwQztBQUNEOztBQUVEO0FBQ0E7QUFDQTtBQUNBOzs7O3VDQUMwQjtBQUN4QixVQUFNRSxPQUFPLGNBQWI7QUFDQSxVQUFJbEIsZ0JBQUo7QUFDQSxVQUFJO0FBQ0ZBLGtCQUFVQyxPQUFPaUIsSUFBUCxDQUFWO0FBQ0EsWUFBTUMsSUFBSSxrQkFBVjtBQUNBbkIsZ0JBQVFZLE9BQVIsQ0FBZ0JPLENBQWhCLEVBQW1CQSxDQUFuQjtBQUNBbkIsZ0JBQVFlLFVBQVIsQ0FBbUJJLENBQW5CO0FBQ0EsZUFBTyxJQUFQO0FBQ0QsT0FORCxDQU1FLE9BQU9DLENBQVAsRUFBVTtBQUNWLGVBQU9BLGFBQWFDLFlBQWI7QUFDTDtBQUNBRCxVQUFFRSxJQUFGLEtBQVcsRUFBWDtBQUNBO0FBQ0FGLFVBQUVFLElBQUYsS0FBVyxJQUZYO0FBR0E7QUFDQTtBQUNBRixVQUFFRyxJQUFGLEtBQVcsb0JBTFg7QUFNQTtBQUNBSCxVQUFFRyxJQUFGLEtBQVcsNEJBVE47QUFVTDtBQUNBdkIsZ0JBQVF3QixNQUFSLEtBQW1CLENBWHJCO0FBWUQ7QUFDRiIsImZpbGUiOiIuL3NyYy9zY3JpcHRzL2xvY2FsU3RvcmFnZUFQSS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUHJvdmlkZXMgY29tbW9uIGZ1bmN0aW9ucyB1c2VkIGJ5IHRoZSBsb2NhbCBzdG9yYWdlIEFQSS4gVXNlZCBpbiB0aGUgU3RvcmUgYW5kIFVSTCBjbGFzc2VzLiBJblxuICogdGhlIGNhc2UgdGhhdCB3ZSBjYW5ub3QgdXNlIGxvY2FsU3RvcmFnZSBvciBpZiB3ZSB3YW50IHRvIGRlZmluZSBtdWx0aXBsZSBzdG9yZSBwcm92aWRlcnMgZm9yXG4gKiBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSB3ZSB3aWxsIGJlIGFibGUgdG8gc3dhcCBvdXQgdGhlIHN0b3JhZ2Ugb2JqZWN0IGZvciBvbmUgdGhhdCBpbXBsZW1lbnRzXG4gKiB0aGUgZ2V0SXRlbSwgc2V0SXRlbSAmIHJlbW92ZUl0ZW0gZnVuY3Rpb25zIGluIGFuIGVxdWl2YWxlbnQgd2F5IHdpdGhvdXQgY2hhbmdpbmcgYW55IG9mIHRoZVxuICogY29kZSBpbiB0aGUgU3RvcmUsIFVSTCwgZXRjIGNsYXNzZXMuXG4gKi9cbmNvbnN0IFNUQVRFX0tFWSA9ICdzdGF0ZSc7XG5cbmV4cG9ydCBjbGFzcyBTdG9yYWdlQVBJIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKFN0b3JhZ2VBUEkuc3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgICB0aGlzLnN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgIH1cbiAgICAvLyBXZSBuZWVkIHRoaXMgY3VzdG9tIGV2ZW50IHNpbmNlIGJyb3dzZXJzIGRvIG5vdCBnZW5lcmFsbHkgZGlzcGF0Y2ggdGhlICdzdG9yYWdlJyBldmVudCBtb3N0XG4gICAgLy8gb2YgdGhlIHRpbWUuIFRoZXkgb25seSB0ZW5kIHRvIGZpcmUgaXQgd2hlbiB5b3UgaGF2ZSB0aGUgc2FtZSB0YWIgb3BlbiBpbiB0d28gd2luZG93cyBhbmRcbiAgICAvLyBvbmUgdGFiIGNoYW5nZXMgdGhlIGxvY2FsU3RvcmFnZS5cbiAgICB0aGlzLnN0b3JhZ2VFdmVudCA9IG5ldyBDdXN0b21FdmVudCgnc3RvcmFnZXMnKTtcbiAgfVxuXG4gIGRpc3BhdGNoU3RvcmFnZUV2ZW50KCkge1xuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KHRoaXMuc3RvcmFnZUV2ZW50KTtcbiAgfVxuXG4gIC8vIEdldHMgYW4gaXRlbSBmcm9tIHRoZSBzdG9yYWdlIHByb3ZpZGVyLCBwcmltYXJpbHkgdXNlZCBsYXRlciBpbiB0aGUgY29tcG9zZWQgZnVuY3Rpb25zXG4gIC8vXG4gIC8vIEBwYXJhbSBrZXkgfCBzdHJpbmdcbiAgLy8gQHJldHVybiBzdHJpbmdcbiAgZ2V0SXRlbShrZXkgPSAnJykge1xuICAgIHJldHVybiB0aGlzLnN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICB9XG5cbiAgLy8gR2V0cyB0aGUgc3RhdGUgZnJvbSB0aGUgc3RvcmFnZSBwcm92aWRlclxuICAvL1xuICAvLyBAcmV0dXJuIHN0cmluZ1xuICBnZXRTdGF0ZUFzU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLmdldEl0ZW0oU1RBVEVfS0VZKTtcbiAgfVxuXG4gIC8vIEdldHMgdGhlIHN0YXRlIGZyb20gdGhlIHN0b3JhZ2UgcHJvdmlkZXIgYXMgYW4gb2JqZWN0XG4gIC8vXG4gIC8vIEByZXR1cm4gb2JqZWN0XG4gIGdldFN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLmNoZWNrU3RhdGVFeGlzdHMoKSA/IEpTT04ucGFyc2UodGhpcy5nZXRJdGVtKFNUQVRFX0tFWSkpIDoge307XG4gIH1cblxuICAvLyBTZXRzIGEga2V5L3ZhbHVlIHBhaXIgdG8gdGhlIHN0b3JhZ2UgcHJvdmlkZXIsIHByaW1hcmlseSB1c2VkIGxhdGVyIGluIHRoZSBjb21wb3NlZCBmdW5jdGlvbnNcbiAgLy9cbiAgLy8gQHBhcmFtIGtleSB8IHN0cmluZ1xuICAvLyBAcGFyYW0gdmFsdWUgfCBzdHJpbmdcbiAgc2V0SXRlbShrZXkgPSAnJywgdmFsdWUgPSAnJykge1xuICAgIHRoaXMuc3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpO1xuICAgIHRoaXMuZGlzcGF0Y2hTdG9yYWdlRXZlbnQoKTtcbiAgfVxuXG4gIC8vIFNldHMgYSBuZXcgc3RhdGUgc3RyaW5nIHN0YXRlLCBzaG91bGQgYmUgYSBzdHJpbmdpZmllZCBvYmplY3RcbiAgLy9cbiAgLy8gQHBhcmFtIHZhbHVlIHwgc3RyaW5nXG4gIHNldFN0YXRlQXNTdHJpbmcodmFsdWUgPSAnJykge1xuICAgIHRoaXMuc2V0SXRlbShTVEFURV9LRVksIHZhbHVlKTtcbiAgfVxuXG4gIC8vIFNldHMgYSBuZXcgc3RhdGUgb2JqZWN0IHN0YXRlXG4gIC8vXG4gIC8vIEBwYXJhbSB2YWx1ZSB8IHN0cmluZ1xuICBzZXRTdGF0ZSh2YWx1ZSA9IHt9KSB7XG4gICAgdGhpcy5zZXRJdGVtKFNUQVRFX0tFWSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgfVxuXG4gIC8vIFJlbW92ZXMgYSBrZXkvdmFsdWUgcGFpciBmcm9tIHRoZSBzdG9yYWdlIHByb3ZpZGVyLCBwcmltYXJpbHkgdXNlZCBsYXRlciBpbiB0aGUgY29tcG9zZWRcbiAgLy8gZnVuY3Rpb25zXG4gIC8vXG4gIC8vIEBwYXJhbSBrZXkgfCBzdHJpbmdcbiAgcmVtb3ZlSXRlbShrZXkgPSAnJykge1xuICAgIHRoaXMuc3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgdGhpcy5kaXNwYXRjaFN0b3JhZ2VFdmVudCgpO1xuICB9XG5cbiAgLy8gUmVtb3ZlcyB0aGUgY3VycmVudCBzdGF0ZSBmcm9tIHRoZSBzdG9yZVxuICByZW1vdmVTdGF0ZSgpIHtcbiAgICB0aGlzLnJlbW92ZUl0ZW0oU1RBVEVfS0VZKTtcbiAgfVxuXG4gIC8vIENoZWNrcyBpZiB0aGUgc3RhdGUgZXhpc3RzIGluIHRoZSBzdG9yYWdlIHByb3ZpZGVyXG4gIGNoZWNrU3RhdGVFeGlzdHMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0SXRlbShTVEFURV9LRVkpID8gdHJ1ZSA6IGZhbHNlO1xuICB9XG5cbiAgc3RhdGljIGxpc3RlbkZvclN0YXRlQ2hhbmdlKGhhbmRsZXIpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc3RvcmFnZXMnLCBoYW5kbGVyKTtcbiAgfVxuXG4gIC8vIENoZWNrIGlmIGxvY2FsU3RvcmFnZSBhdmFpbGFibGUuXG4gIC8vIFRha2VuIGZyb20gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9TdG9yYWdlX0FQSS9Vc2luZ190aGVfV2ViX1N0b3JhZ2VfQVBJXG4gIC8vXG4gIC8vIEByZXR1cm4gYm9vbGVhblxuICBzdGF0aWMgc3RvcmFnZUF2YWlsYWJsZSgpIHtcbiAgICBjb25zdCB0eXBlID0gJ2xvY2FsU3RvcmFnZSc7XG4gICAgbGV0IHN0b3JhZ2U7XG4gICAgdHJ5IHtcbiAgICAgIHN0b3JhZ2UgPSB3aW5kb3dbdHlwZV07XG4gICAgICBjb25zdCB4ID0gJ19fc3RvcmFnZV90ZXN0X18nO1xuICAgICAgc3RvcmFnZS5zZXRJdGVtKHgsIHgpO1xuICAgICAgc3RvcmFnZS5yZW1vdmVJdGVtKHgpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGUgaW5zdGFuY2VvZiBET01FeGNlcHRpb24gJiYgKFxuICAgICAgICAvLyBldmVyeXRoaW5nIGV4Y2VwdCBGaXJlZm94XG4gICAgICAgIGUuY29kZSA9PT0gMjIgfHxcbiAgICAgICAgLy8gRmlyZWZveFxuICAgICAgICBlLmNvZGUgPT09IDEwMTQgfHxcbiAgICAgICAgLy8gdGVzdCBuYW1lIGZpZWxkIHRvbywgYmVjYXVzZSBjb2RlIG1pZ2h0IG5vdCBiZSBwcmVzZW50XG4gICAgICAgIC8vIGV2ZXJ5dGhpbmcgZXhjZXB0IEZpcmVmb3hcbiAgICAgICAgZS5uYW1lID09PSAnUXVvdGFFeGNlZWRlZEVycm9yJyB8fFxuICAgICAgICAvLyBGaXJlZm94XG4gICAgICAgIGUubmFtZSA9PT0gJ05TX0VSUk9SX0RPTV9RVU9UQV9SRUFDSEVEJykgJiZcbiAgICAgICAgLy8gYWNrbm93bGVkZ2UgUXVvdGFFeGNlZWRlZEVycm9yIG9ubHkgaWYgdGhlcmUncyBzb21ldGhpbmcgYWxyZWFkeSBzdG9yZWRcbiAgICAgICAgc3RvcmFnZS5sZW5ndGggIT09IDA7XG4gICAgfVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/localStorageAPI.js\n");

/***/ }),

/***/ "./src/scripts/store.js":
/*!******************************!*\
  !*** ./src/scripts/store.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Store = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _localStorageAPI = __webpack_require__(/*! ./localStorageAPI */ \"./src/scripts/localStorageAPI.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This component is intended to handle the storage and retrieval of the state of\n * the NFWF application. As of this writing it is using localStorage to do this.\n * Uses simple class instance methods with the short-hand method declaration\n * pattern.\n *\n * To note: There is a difference between the Store and the State. As of 0a3106e\n * the Store is a String saved to the browsers localStorage and is a serialized\n * version of the State. The State is an Object which is interacted with by\n * parsing the State string from the Store, modifying the results of the parse,\n * and re-serializing it back to the Store.\n */\nvar Store = exports.Store = function () {\n  // ..and an (optional) custom class constructor. If one is\n  // not supplied, a default constructor is used instead:\n  // constructor() { }\n  function Store() {\n    _classCallCheck(this, Store);\n\n    // this.state = state;\n    this.store = new _localStorageAPI.StorageAPI();\n\n    // this.state = {};\n    // if(this.isStateExists){\n    //   this.state = this.getState();\n    // } else {\n    //   const state = {};\n    //   this.state = {state};\n    // }\n  }\n\n  // // GETTERS\n\n  // As of 0a3106e this is probably intended to be used as a getter for the\n  // Store. However it is pulling an unused and undeclared variable _state so it\n  // probably just returns undefined.\n\n\n  _createClass(Store, [{\n    key: 'getStateItem',\n\n\n    // Gets an individual top level item from the state\n    //\n    // @param item - string\n    // @return string || object\n    value: function getStateItem(item) {\n      return this.checkItem(item) ? this.getState()[item] : {};\n    }\n\n    // Gets the entire state object\n    //\n    // @return object\n\n  }, {\n    key: 'getState',\n    value: function getState() {\n      return this.store.getState();\n    }\n\n    // // SETTERS\n\n    // Setter for the state to the Store, preserving any non-overwritten\n    // properties in the Store.\n    //\n    // @param state - object\n\n  }, {\n    key: 'saveState',\n    value: function saveState(state) {\n      var currentState = this.getState();\n      var newState = _extends({}, currentState, state);\n      this.store.setState(newState);\n    }\n\n    // Setter for the state to the Store, overriding any non-overwritten\n    // properties in the Store.\n    //\n    // @param state - object\n\n  }, {\n    key: 'saveNewState',\n    value: function saveNewState(state) {\n      this.store.setState(state);\n    }\n\n    // Setter which overrides the entire Store with a new State object.\n    //\n    // @param StateObject - object\n\n  }, {\n    key: 'setStateFromObject',\n    value: function setStateFromObject(StateObject) {\n      this.saveNewState(StateObject);\n    }\n\n    // Setter for a key value pair to the State, which means that it writes it to\n    // the Store.\n    //\n    // @param key - string\n    // @param value - string\n\n  }, {\n    key: 'addStateItem',\n    value: function addStateItem(key, value) {\n      var state = this.getState();\n      state[key] = value;\n      this.saveNewState(state);\n    }\n\n    // Setter for a key value pair to the Store.\n    //\n    // @param key - string\n    // @param value - string\n\n  }, {\n    key: 'setStoreItem',\n    value: function setStoreItem(key, value) {\n      var storeObj = _defineProperty({}, key, value);\n      var newStateObj = _extends({}, this.getState(), storeObj);\n      this.saveNewState(newStateObj);\n    }\n\n    // // REMOVERS\n\n    // Removes the entire state from the browser.\n\n  }, {\n    key: 'clearState',\n    value: function clearState() {\n      this.store.removeState();\n    }\n\n    // Removes a key value pair from the State and the Store.\n    //\n    // @param key - string\n\n  }, {\n    key: 'removeStateItem',\n    value: function removeStateItem(key) {\n      var currentState = this.getState();\n      delete currentState[key];\n      this.saveNewState(currentState);\n    }\n\n    // // UTILITIES\n\n    // Check if localStorage available.\n    // Taken from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    //\n    // @return boolean\n\n  }, {\n    key: 'isStateExists',\n\n\n    // Check if the state has been saved to the browser store\n    //\n    // @return boolean\n    value: function isStateExists() {\n      return this.store.checkStateExists();\n    }\n\n    // Check if an item has been saved to the store\n    // unused as of 0a3106e\n    //\n    // @param item - string\n    // @return boolean\n\n  }, {\n    key: 'isStateItemExist',\n    value: function isStateItemExist(item) {\n      if (this.isStateExists()) {\n        var stateStr = this.store.getStateAsString();\n        if (stateStr.indexOf(item) > 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Also checks if an item has been saved to the store\n    // TODO: Rewrite the indexOf check to parse the deeply nested keys of an object since the current\n    // code will give an error in some edge cases. EX:\n    //\n    // this.store.setStateAsString('{foo:\"bar\",bars:\"baz\"}');\n    // checkItem('bar'); // returns TRUE ();\n    //\n    // @param item - string\n    // @return boolean\n\n  }, {\n    key: 'checkItem',\n    value: function checkItem(item) {\n      return this.isStateExists() && this.store.getStateAsString().indexOf(item) > 0;\n    }\n\n    //  const ele.addEventListener('click', (e) => {\n    //    this.setStateFromObject();\n    //  })\n\n    // We will look at static and subclassed methods shortly\n\n    // save map action.\n    // ensures the state map action is consistent\n\n  }, {\n    key: 'saveAction',\n    value: function saveAction(type) {\n      this.setStoreItem('lastaction', type);\n    }\n  }, {\n    key: 'Store',\n    get: function get() {\n      return this._state;\n    }\n  }], [{\n    key: 'storageAvailable',\n    value: function storageAvailable() {\n      return _localStorageAPI.StorageAPI.storageAvailable();\n    }\n  }]);\n\n  return Store;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/store.js\n");

/***/ })

}]);